# ========================================
# CODEX API V2 - Environment Configuration
# ========================================

# Application Configuration
PORT=4000
NODE_ENV=development

# MongoDB Configuration
MONGODB_URI=mongodb://localhost:27017/codex_api_v2

# Redis Configuration (for background jobs)
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# GitLab API Configuration (REQUIRED for comprehensive user sync)
GITLAB_PERSONAL_ACCESS_TOKEN=glpat-xxxxxxxxxxxxxxxxxxxx
GITLAB_GRAPHQL_URL=https://gitlab.com/api/graphql

# GraphQL Configuration
GRAPHQL_PLAYGROUND=true
GRAPHQL_INTROSPECTION=true

# Logging Configuration
LOG_LEVEL=info

# ========================================
# SETUP INSTRUCTIONS
# ========================================

# 1. GitLab Personal Access Token Setup:
#    - Go to GitLab → User Settings → Access Tokens
#    - Create token with 'read_api' scope
#    - Copy token to GITLAB_PERSONAL_ACCESS_TOKEN
#
# 2. MongoDB Setup:
#    - Ensure MongoDB is running on specified URI
#    - Database 'codex_api_v2' will be created automatically
#
# 3. Redis Setup (Optional):
#    - Required only if using background job features
#    - Install Redis server if not already running
#
# 4. Application Startup:
#    npm install
#    npm run dev
#
# ========================================
# BACKGROUND JOBS
# ========================================
#
# User Sync Job (runs every 20 minutes):
# - Fetches complete user data from GitLab GraphQL API
# - Updates user records with comprehensive information
# - Uses 15 parallel query groups for optimal performance
#
# Job Management Endpoints:
# GET  /jobs/status              - View queue status
# POST /jobs/trigger/user-sync   - Manually trigger sync
# POST /jobs/pause              - Pause job processing
# POST /jobs/resume             - Resume job processing
# POST /jobs/cleanup            - Clean old jobs
#
# ========================================
